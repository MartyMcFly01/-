# Generated by Django 3.2 on 2021-06-20 12:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cathedra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, null=True, verbose_name='Кафедра')),
            ],
            options={
                'verbose_name': 'Кафедра',
                'verbose_name_plural': 'Кафедри',
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, null=True, verbose_name='Факультет')),
                ('poll_result_link', models.CharField(max_length=100, null=True, verbose_name='Ссылка на результаты опроса')),
            ],
            options={
                'verbose_name': 'Факультет',
                'verbose_name_plural': 'Факультеты',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20, verbose_name='Код')),
                ('cathedra', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainapp.cathedra', verbose_name='Кафедра')),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
            },
        ),
        migrations.CreateModel(
            name='Locale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=50, unique=True)),
                ('value', models.TextField(null=True)),
            ],
            options={
                'verbose_name': 'Текст',
                'verbose_name_plural': 'Текста',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(verbose_name='Вопрос')),
                ('answer_tip', models.TextField(blank=True, null=True, verbose_name='Примечания')),
                ('answer_options', models.PositiveSmallIntegerField(choices=[(5, '1-5'), (2, 'Нет/Да')], default=5, verbose_name='1-5 или нет/да')),
                ('is_for_eng', models.BooleanField(default=False, verbose_name='для Англ')),
                ('is_for_lec', models.BooleanField(default=False, verbose_name='для Лектора')),
                ('is_for_pra', models.BooleanField(default=False, verbose_name='для Практика')),
                ('is_two_answers', models.BooleanField(default=False, verbose_name='Разделять ответы для лектора и практика')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.PositiveIntegerField(verbose_name='ID ответившего')),
                ('teacher_type', models.CharField(choices=[('LECTOR', 'Лектор'), ('PRACTIC', 'Практик'), ('LECTOR_PRACTIC', 'Лектор и практик'), ('ENG', 'Английский')], default='LECTOR', max_length=20, verbose_name='Тип опросника')),
                ('open_question_answer', models.TextField(blank=True, null=True, verbose_name='Ответ свободного микрофона')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата прохождения')),
            ],
            options={
                'verbose_name': 'Результат опроса',
                'verbose_name_plural': 'Результаты опроса',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Имя')),
                ('photo', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ссылка на фото')),
                ('is_eng', models.BooleanField(default=False, verbose_name='Это англ?')),
                ('lessons', models.TextField(null=True, verbose_name='Шо ведет')),
                ('cathedras', models.ManyToManyField(related_name='teachers', to='mainapp.Cathedra')),
            ],
            options={
                'verbose_name': 'Препод',
                'verbose_name_plural': 'Преподы',
            },
        ),
        migrations.CreateModel(
            name='TeacherNGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.group', verbose_name='Группа')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.teacher', verbose_name='Препод')),
            ],
            options={
                'verbose_name': 'Препод+Группа',
                'verbose_name_plural': 'Преподы+Группы',
                'unique_together': {('teacher', 'group')},
            },
        ),
        migrations.AddField(
            model_name='teacher',
            name='groups',
            field=models.ManyToManyField(through='mainapp.TeacherNGroup', to='mainapp.Group'),
        ),
        migrations.CreateModel(
            name='ResultAnswers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_1', models.PositiveSmallIntegerField(verbose_name='Ответ')),
                ('answer_2', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Еще ответ')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.question', verbose_name='Вопрос')),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.result')),
            ],
            options={
                'verbose_name': 'Ответ на вопрос',
                'verbose_name_plural': 'Ответы на вопросы',
            },
        ),
        migrations.AddField(
            model_name='result',
            name='teacher_n_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.teacherngroup', verbose_name='Препод и группа'),
        ),
        migrations.AddField(
            model_name='group',
            name='teachers',
            field=models.ManyToManyField(through='mainapp.TeacherNGroup', to='mainapp.Teacher'),
        ),
        migrations.AddField(
            model_name='cathedra',
            name='faculty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.faculty', verbose_name='Факультет'),
        ),
        migrations.AlterUniqueTogether(
            name='result',
            unique_together={('user_id', 'teacher_n_group')},
        ),
    ]
